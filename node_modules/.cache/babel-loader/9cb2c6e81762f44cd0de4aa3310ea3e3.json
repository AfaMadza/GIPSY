{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\gipsy\\\\src\\\\components\\\\MediaCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia'; //import Button from '@material-ui/core/Button';\n\nimport SnackBar from './SnackBar';\nimport SocialMenu from './SocialMenu';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse'; // import ShareIcon from '@material-ui/icons/Share';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport IconButton from '@material-ui/core/IconButton';\nimport * as actions from '../store/actions/index';\nimport classnames from 'classnames';\n\nvar styles = function styles(theme) {\n  return {\n    card: {\n      maxWidth: 400\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%' // 16:9\n\n    },\n    actions: {\n      display: 'flex'\n    },\n    expand: _defineProperty({\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest\n      }),\n      marginLeft: 'auto'\n    }, theme.breakpoints.up('sm'), {\n      marginRight: -8\n    }),\n    expandOpen: {\n      transform: 'rotate(180deg)'\n    },\n    faveColor: {\n      color: '#f50057'\n    }\n  };\n};\n\nvar MediaCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MediaCard, _React$Component);\n\n  function MediaCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MediaCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MediaCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      expanded: false,\n      currentTarget: null\n    };\n\n    _this.handleExpandClick = function () {\n      _this.setState(function (state) {\n        return {\n          expanded: !state.expanded\n        };\n      });\n    };\n\n    _this.handleShareClick = function (event) {\n      _this.setState({\n        currentTarget: event.currentTarget\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MediaCard, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(CardMedia, {\n        className: classes.media,\n        image: this.props.url,\n        title: this.props.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"headline\",\n        component: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.props.title), React.createElement(Typography, {\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.props.loading ? React.createElement(\"span\", {\n        className: \"fa-li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"fas fa-spinner fa-pulse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })) : null)), React.createElement(CardActions, {\n        className: classes.actions,\n        disableActionSpacing: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(SnackBar, {\n        favorited: this.props.favorited,\n        faveData: this.props.faveData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(SocialMenu, {\n        currentTarget: this.state.currentTarget,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(IconButton, {\n        className: classnames(classes.expand, _defineProperty({}, classes.expandOpen, this.state.expanded)),\n        onClick: this.handleExpandClick,\n        \"aria-expanded\": this.state.expanded,\n        \"aria-label\": \"Show more\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }))), React.createElement(Collapse, {\n        in: this.state.expanded,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        paragraph: true,\n        variant: \"body2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"About this GIF:\"), React.createElement(Typography, {\n        paragraph: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Rating: \", this.props.rating), React.createElement(Typography, {\n        paragraph: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"User: \", this.props.user ? this.props.user : 'None'), React.createElement(Typography, {\n        paragraph: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Uploaded: \", this.props.uploaded), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Frames: \", this.props.frames))));\n    }\n  }]);\n\n  return MediaCard;\n}(React.Component);\n\nMediaCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    token: state.auth.token,\n    userId: state.auth.userId,\n    loading: state.favorites.loading\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAddFavorite: function onAddFavorite(faveData, token) {\n      return dispatch(actions.addFavorite(faveData, token));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(MediaCard));","map":{"version":3,"sources":["C:\\Users\\Afa\\Desktop\\npm test\\node_modules\\gipsy\\src\\components\\MediaCard.js"],"names":["React","PropTypes","withStyles","connect","Card","CardActions","CardContent","CardMedia","SnackBar","SocialMenu","Typography","Collapse","ExpandMoreIcon","IconButton","actions","classnames","styles","theme","card","maxWidth","media","height","paddingTop","display","expand","transform","transition","transitions","create","duration","shortest","marginLeft","breakpoints","up","marginRight","expandOpen","faveColor","color","MediaCard","state","expanded","currentTarget","handleExpandClick","setState","handleShareClick","event","classes","props","url","title","loading","favorited","faveData","rating","user","uploaded","frames","Component","propTypes","object","isRequired","mapStateToProps","isAuthenticated","auth","token","userId","favorites","mapDispatchToProps","dispatch","onAddFavorite","addFavorite"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CACA;;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AACA,IAAMC,MAAM,GAAI,SAAVA,MAAU,CAAAC,KAAK;AAAA,SAAK;AAExBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN,KAFkB;AAKxBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,CADH;AAELC,MAAAA,UAAU,EAAE,QAFP,CAEiB;;AAFjB,KALiB;AASxBR,IAAAA,OAAO,EAAE;AACPS,MAAAA,OAAO,EAAE;AADF,KATe;AAYxBC,IAAAA,MAAM;AACJC,MAAAA,SAAS,EAAE,cADP;AAEJC,MAAAA,UAAU,EAAET,KAAK,CAACU,WAAN,CAAkBC,MAAlB,CAAyB,WAAzB,EAAsC;AAChDC,QAAAA,QAAQ,EAAEZ,KAAK,CAACU,WAAN,CAAkBE,QAAlB,CAA2BC;AADW,OAAtC,CAFR;AAKJC,MAAAA,UAAU,EAAE;AALR,OAMHd,KAAK,CAACe,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CANG,EAM0B;AAC5BC,MAAAA,WAAW,EAAE,CAAC;AADc,KAN1B,CAZkB;AAsBxBC,IAAAA,UAAU,EAAE;AACVV,MAAAA,SAAS,EAAE;AADD,KAtBY;AAyBxBW,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AADE;AAzBa,GAAL;AAAA,CAArB;;IA8BMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,KADJ;AAENC,MAAAA,aAAa,EAAE;AAFT,K;;UAKRC,iB,GAAoB,YAAM;AACxB,YAAKC,QAAL,CAAc,UAAAJ,KAAK;AAAA,eAAK;AAAEC,UAAAA,QAAQ,EAAE,CAACD,KAAK,CAACC;AAAnB,SAAL;AAAA,OAAnB;AACD,K;;UAEFI,gB,GAAmB,UAACC,KAAD,EAAW;AAC7B,YAAKF,QAAL,CAAc;AAACF,QAAAA,aAAa,EAAEI,KAAK,CAACJ;AAAtB,OAAd;AACA,K;;;;;;;6BACS;AAAA,UACCK,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAGP,aACA,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEA,OAAO,CAAC5B,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACE,QAAA,SAAS,EAAE4B,OAAO,CAAC1B,KADrB;AAEE,QAAA,KAAK,EAAE,KAAK2B,KAAL,CAAWC,GAFpB;AAGE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,YAAY,MAAxB;AAAyB,QAAA,OAAO,EAAC,UAAjC;AAA4C,QAAA,SAAS,EAAC,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWE,KADd,CADF,EAIE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWG,OAAX,GAAqB;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB;AAAG,QAAA,KAAK,EAAC,yBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB,CAArB,GAA8F,IADjG,CAJF,CANJ,EAcI,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAEJ,OAAO,CAAChC,OAAhC;AAAyC,QAAA,oBAAoB,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAE,KAAKiC,KAAL,CAAWI,SAAhC;AAA2C,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,UAAD;AAAY,QAAA,aAAa,EAAE,KAAKb,KAAL,CAAWE,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,UAAD;AACE,QAAA,SAAS,EAAE1B,UAAU,CAAC+B,OAAO,CAACtB,MAAT,sBAClBsB,OAAO,CAACX,UADU,EACG,KAAKI,KAAL,CAAWC,QADd,EADvB;AAIE,QAAA,OAAO,EAAE,KAAKE,iBAJhB;AAKE,yBAAe,KAAKH,KAAL,CAAWC,QAL5B;AAME,sBAAW,WANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CAHF,CAdJ,EA4BI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,QAAzB;AAAmC,QAAA,OAAO,EAAC,MAA3C;AAAkD,QAAA,aAAa,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,SAAS,MAArB;AAAsB,QAAA,OAAO,EAAC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAIE,oBAAC,UAAD;AAAY,QAAA,SAAS,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACW,KAAKO,KAAL,CAAWM,MADtB,CAJF,EAUE,oBAAC,UAAD;AAAY,QAAA,SAAS,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACS,KAAKN,KAAL,CAAWO,IAAX,GAAkB,KAAKP,KAAL,CAAWO,IAA7B,GAAoC,MAD7C,CAVF,EAaE,oBAAC,UAAD;AAAY,QAAA,SAAS,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACa,KAAKP,KAAL,CAAWQ,QADxB,CAbF,EAmBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACW,KAAKR,KAAL,CAAWS,MADtB,CAnBF,CADF,CA5BJ,CADA;AAwDD;;;;EAxEqBxD,KAAK,CAACyD,S;;AA2E9BnB,SAAS,CAACoB,SAAV,GAAsB;AACpBZ,EAAAA,OAAO,EAAE7C,SAAS,CAAC0D,MAAV,CAAiBC;AADN,CAAtB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAtB,KAAK,EAAI;AAC7B,SAAO;AACLuB,IAAAA,eAAe,EAAEvB,KAAK,CAACwB,IAAN,CAAWC,KAAX,KAAqB,IADjC;AAELA,IAAAA,KAAK,EAAEzB,KAAK,CAACwB,IAAN,CAAWC,KAFb;AAGLC,IAAAA,MAAM,EAAE1B,KAAK,CAACwB,IAAN,CAAWE,MAHd;AAILf,IAAAA,OAAO,EAAEX,KAAK,CAAC2B,SAAN,CAAgBhB;AAJpB,GAAP;AAMD,CAPH;;AAQE,IAAMiB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLC,IAAAA,aAAa,EAAE,uBAACjB,QAAD,EAAWY,KAAX;AAAA,aAAqBI,QAAQ,CAACtD,OAAO,CAACwD,WAAR,CAAoBlB,QAApB,EAA8BY,KAA9B,CAAD,CAA7B;AAAA;AADV,GAAP;AAGD,CAJD;;AAKF,eAAe7D,OAAO,CAAC0D,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CjE,UAAU,CAACc,MAAD,CAAV,CAAmBsB,SAAnB,CAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {connect} from 'react-redux';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n//import Button from '@material-ui/core/Button';\r\nimport SnackBar from './SnackBar';\r\nimport SocialMenu from './SocialMenu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport * as actions from '../store/actions/index';\r\nimport classnames from 'classnames';\r\nconst styles  = theme => ({\r\n  \r\n  card: {\r\n    maxWidth: 400,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  actions: {\r\n    display: 'flex',\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n    marginLeft: 'auto',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginRight: -8,\r\n    },\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  faveColor: {\r\n    color: '#f50057'\r\n  }\r\n});\r\n\r\nclass MediaCard extends React.Component {\r\n  state = { \r\n    expanded: false,\r\n    currentTarget: null\r\n  };\r\n\r\n  handleExpandClick = () => {\r\n    this.setState(state => ({ expanded: !state.expanded }));\r\n  };\r\n\r\n handleShareClick = (event) => {\r\n  this.setState({currentTarget: event.currentTarget});\r\n }\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n    <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={this.props.url}\r\n          title={this.props.title}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"headline\" component=\"h2\">\r\n            {this.props.title}\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            {this.props.loading ? <span className=\"fa-li\"><i class=\"fas fa-spinner fa-pulse\"></i></span> : null}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.actions} disableActionSpacing>\r\n          <SnackBar favorited={this.props.favorited} faveData={this.props.faveData}/>\r\n          <SocialMenu currentTarget={this.state.currentTarget}/>\r\n          <IconButton\r\n            className={classnames(classes.expand, {\r\n              [classes.expandOpen]: this.state.expanded,\r\n            })}\r\n            onClick={this.handleExpandClick}\r\n            aria-expanded={this.state.expanded}\r\n            aria-label=\"Show more\"\r\n          >\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n        </CardActions>\r\n        <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Typography paragraph variant=\"body2\">\r\n              About this GIF:\r\n            </Typography>\r\n            <Typography paragraph>\r\n              Rating: {this.props.rating}\r\n            </Typography>\r\n            {/* <Typography paragraph>\r\n              Source: {this.props.source}\r\n            </Typography> */}\r\n            <Typography paragraph>\r\n              User: {this.props.user ? this.props.user : 'None'}\r\n            </Typography>\r\n            <Typography paragraph>\r\n              Uploaded: {this.props.uploaded}\r\n            </Typography>\r\n            {/* <Typography>\r\n              Trending: {this.props.trending}\r\n            </Typography> */}\r\n            <Typography>\r\n              Frames: {this.props.frames}\r\n            </Typography>\r\n          </CardContent>\r\n        </Collapse>\r\n    </Card>\r\n  );\r\n  }\r\n}\r\n\r\nMediaCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n      isAuthenticated: state.auth.token !== null,\r\n      token: state.auth.token,\r\n      userId: state.auth.userId,\r\n      loading: state.favorites.loading\r\n    };\r\n  };\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      onAddFavorite: (faveData, token) => dispatch(actions.addFavorite(faveData, token))\r\n    };\r\n  };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(MediaCard));\r\n"]},"metadata":{},"sourceType":"module"}