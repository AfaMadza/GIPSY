{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\gipsy\\\\src\\\\components\\\\SnackBar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles'; //import Button from '@material-ui/core/Button';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport * as actions from '../store/actions/index';\n\nvar styles = function styles(theme) {\n  return {\n    close: {\n      padding: theme.spacing.unit / 2\n    }\n  };\n};\n\nvar SimpleSnackbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SimpleSnackbar, _React$Component);\n\n  function SimpleSnackbar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SimpleSnackbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SimpleSnackbar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false\n    };\n\n    _this.handleFavoriteClick = function () {\n      var faveInfo = {\n        faveData: _this.props.faveData,\n        userId: _this.props.userId\n      };\n\n      _this.props.onAddFavorite(faveInfo, _this.props.token);\n\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function (event, reason) {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SimpleSnackbar, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.props.isAuthenticated && !this.props.favorited ? React.createElement(IconButton, {\n        \"aria-label\": \"Add to favorites\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(FavoriteIcon, {\n        onClick: this.handleFavoriteClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })) : null, React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        open: this.state.open,\n        autoHideDuration: 6000,\n        onClose: this.handleClose,\n        ContentProps: {\n          'aria-describedby': 'message-id'\n        },\n        message: React.createElement(\"span\", {\n          id: \"message-id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Gif added to favorites\"),\n        action: [// <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleClose}>\n        //   UNDO\n        // </Button>,\n        React.createElement(IconButton, {\n          key: \"close\",\n          \"aria-label\": \"Close\",\n          color: \"inherit\",\n          className: classes.close,\n          onClick: this.handleClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SimpleSnackbar;\n}(React.Component);\n\nSimpleSnackbar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    token: state.auth.token,\n    userId: state.auth.userId // clicked: state.favorites.favorited\n\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAddFavorite: function onAddFavorite(faveData, token) {\n      return dispatch(actions.addFavorite(faveData, token));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SimpleSnackbar));","map":{"version":3,"sources":["C:\\Users\\Afa\\Desktop\\npm test\\node_modules\\gipsy\\src\\components\\SnackBar.js"],"names":["React","PropTypes","connect","withStyles","Snackbar","IconButton","CloseIcon","FavoriteIcon","actions","styles","theme","close","padding","spacing","unit","SimpleSnackbar","state","open","handleFavoriteClick","faveInfo","faveData","props","userId","onAddFavorite","token","setState","handleClose","event","reason","classes","isAuthenticated","favorited","vertical","horizontal","Component","propTypes","object","isRequired","mapStateToProps","auth","mapDispatchToProps","dispatch","addFavorite"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport * as actions from '../store/actions/index';\r\nconst styles = theme => ({\r\n  close: {\r\n    padding: theme.spacing.unit / 2,\r\n  },\r\n});\r\n\r\nclass SimpleSnackbar extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n  handleFavoriteClick = () => {\r\n    let faveInfo = {faveData: this.props.faveData, userId: this.props.userId  };\r\n    this.props.onAddFavorite(faveInfo, this.props.token);\r\n    this.setState({open: true});\r\n  }\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        {/* <Button onClick={this.handleClick}>Open simple snackbar</Button> */}\r\n        {this.props.isAuthenticated && !this.props.favorited ? \r\n            <IconButton aria-label=\"Add to favorites\">\r\n                <FavoriteIcon onClick={this.handleFavoriteClick}/>\r\n            </IconButton> : null}\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">Gif added to favorites</span>}\r\n          action={[\r\n            // <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleClose}>\r\n            //   UNDO\r\n            // </Button>,\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleSnackbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    // clicked: state.favorites.favorited\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddFavorite: (faveData, token) => dispatch(actions.addFavorite(faveData, token))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SimpleSnackbar));"]},"metadata":{},"sourceType":"module"}