{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from './actionTypes'; //import config from '../../config';\n//Hide API_KEYS\n//let API_KEY = config.API_KEY;\n\nvar API_KEY = 'AIzaSyB-RYMBOUUO6d-sAeBI9kpGpOrZw1t2lh8';\nexport var authStart = function authStart() {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport var authSuccess = function authSuccess(token, userId) {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport var authFail = function authFail(error) {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport var logout = function logout() {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationTime');\n  localStorage.removeItem('userId');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport var checkAuthTimeout = function checkAuthTimeout(expirationTime) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport var auth = function auth(email, password, isSignup) {\n  return function (dispatch) {\n    dispatch(authStart());\n    var authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    var url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=' + API_KEY;\n\n    if (!isSignup) {\n      url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=' + API_KEY;\n    }\n\n    axios.post(url, authData).then(function (response) {\n      console.log(response);\n      var expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n      localStorage.setItem('token', response.data.idToken);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('userId', response.data.localId);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      dispatch(checkAuthTimeout(response.data.expiresIn));\n    }).catch(function (err) {\n      dispatch(authFail(err.response.data.error));\n    });\n  };\n};\nexport var setAuthRedirectPath = function setAuthRedirectPath(path) {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport var authCheckState = function authCheckState() {\n  return function (dispatch) {\n    var token = localStorage.getItem('token');\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      var expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate > new Date()) {\n        var userId = localStorage.getItem('userId');\n        dispatch(authSuccess(token, userId));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      } else {\n        dispatch(logout());\n      }\n    }\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Afa\\Desktop\\npm test\\node_modules\\gipsy\\src\\store\\actions\\auth.js"],"names":["axios","actionTypes","API_KEY","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","post","then","response","console","log","expirationDate","Date","getTime","data","expiresIn","setItem","localId","catch","err","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","authCheckState","getItem"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\n//import config from '../../config';\r\n\r\n//Hide API_KEYS\r\n//let API_KEY = config.API_KEY;\r\nlet API_KEY = 'AIzaSyB-RYMBOUUO6d-sAeBI9kpGpOrZw1t2lh8';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=' + API_KEY;\r\n        if (!isSignup) {\r\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=' + API_KEY;\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                console.log(response);\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate > new Date()) {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            } else {\r\n                dispatch(logout());\r\n            }\r\n        }\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}