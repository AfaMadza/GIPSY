{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Afa\\\\Desktop\\\\npm test\\\\node_modules\\\\gipsy\\\\src\\\\components\\\\Favorites.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MediaCard from '../components/MediaCard'; //import axios from '../../axios-orders';\n//import withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nimport * as actions from '../store/actions/index'; //import Spinner from '../../components/UI/Spinner/Spinner';\n\nimport Grid from '@material-ui/core/Grid';\nimport Layout from './Layout';\n\nvar Favorites =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Favorites, _Component);\n\n  function Favorites() {\n    _classCallCheck(this, Favorites);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Favorites).apply(this, arguments));\n  }\n\n  _createClass(Favorites, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onFetchFavorites(this.props.token, this.props.userId);\n    }\n  }, {\n    key: \"makeid\",\n    value: function makeid() {\n      var text = \"\";\n      var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n      for (var i = 0; i < 5; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n      }\n\n      return text;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var gifs = this.props.favorites;\n      console.log('Favorites Log:', this.props.favorites);\n      var favorites = gifs.map(function (gif) {\n        var maxPos = 25;\n\n        if (gif.faveData.title.length > maxPos) {\n          gif.faveData.title = gif.faveData.title.slice(0, 40) + '...';\n        }\n\n        return React.createElement(Grid, {\n          item: true,\n          xl: 3,\n          key: gif.faveData.key + _this.makeid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(MediaCard, {\n          title: gif.faveData.title,\n          url: gif.faveData.url,\n          user: gif.faveData.user,\n          uploaded: gif.faveData.uploaded,\n          rating: gif.faveData.rating,\n          frames: gif.faveData.frames,\n          favorited: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, favorites);\n    }\n  }]);\n\n  return Favorites;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    favorites: state.favorites.favorites,\n    loading: state.favorites.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchFavorites: function onFetchFavorites(token, userId) {\n      return dispatch(actions.fetchFavorites(token, userId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);","map":{"version":3,"sources":["C:\\Users\\Afa\\Desktop\\npm test\\node_modules\\gipsy\\src\\components\\Favorites.js"],"names":["React","Component","connect","MediaCard","actions","Grid","Layout","Favorites","props","onFetchFavorites","token","userId","text","possible","i","charAt","Math","floor","random","length","gifs","favorites","console","log","map","gif","maxPos","faveData","title","slice","key","makeid","url","user","uploaded","rating","frames","mapStateToProps","state","loading","auth","mapDispatchToProps","dispatch","fetchFavorites"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport MediaCard from '../components/MediaCard';\r\n//import axios from '../../axios-orders';\r\n//import withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../store/actions/index';\r\n//import Spinner from '../../components/UI/Spinner/Spinner';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Layout from './Layout';\r\n\r\nclass Favorites extends Component {\r\n    componentDidMount () {\r\n        this.props.onFetchFavorites(this.props.token, this.props.userId);\r\n    }\r\n    \r\n    makeid() {\r\n        var text = \"\";\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n      \r\n        for (var i = 0; i < 5; i++)\r\n          text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n      \r\n        return text;\r\n      }\r\n\r\n    render () {\r\n        let gifs = this.props.favorites;\r\n        console.log('Favorites Log:', this.props.favorites)\r\n         let favorites = gifs.map(  gif => {\r\n            const maxPos = 25\r\n            if (gif.faveData.title.length > maxPos) {     \r\n                gif.faveData.title = gif.faveData.title.slice(0, 40) + '...';\r\n            }\r\n                      \r\n          return (\r\n              <Grid item xl={3} key={gif.faveData.key+this.makeid()}>\r\n                <MediaCard\r\n                          title={gif.faveData.title} \r\n                          url={gif.faveData.url}\r\n                          user={gif.faveData.user}\r\n                          uploaded={gif.faveData.uploaded}\r\n                          rating={gif.faveData.rating}\r\n                          frames={gif.faveData.frames}\r\n                          favorited={true}\r\n                  />\r\n              </Grid>       \r\n          );\r\n      });\r\n        return (\r\n          <Layout> \r\n              {favorites}                        \r\n          </Layout>\r\n        );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        favorites: state.favorites.favorites,\r\n        loading: state.favorites.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchFavorites: (token, userId) => dispatch( actions.fetchFavorites(token, userId) )\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( Favorites );\r\n"]},"metadata":{},"sourceType":"module"}