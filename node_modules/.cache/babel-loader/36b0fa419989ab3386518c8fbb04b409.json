{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nvar initialState = {\n  favorites: [],\n  loading: false,\n  favorited: false\n};\n\nvar faveStart = function faveStart(state, action) {\n  return updateObject(state, {\n    loading: false,\n    favorited: true\n  });\n};\n\nvar faveSuccess = function faveSuccess(state, action) {\n  var newFave = updateObject(action.faveData, {\n    id: action.faveId\n  });\n  return updateObject(state, {\n    loading: false,\n    favorites: state.favorites.concat(newFave)\n  });\n};\n\nvar faveFail = function faveFail(state, action) {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nvar fetchFavesStart = function fetchFavesStart(state, action) {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nvar fetchFavesSuccess = function fetchFavesSuccess(state, action) {\n  return updateObject(state, {\n    favorites: action.favorites,\n    loading: false\n  });\n};\n\nvar fetchFavesFail = function fetchFavesFail(state, action) {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.FAVE_START:\n      return faveStart(state, action);\n\n    case actionTypes.FAVE_SUCCESS:\n      return faveSuccess(state, action);\n\n    case actionTypes.FAVE_FAIL:\n      return faveFail(state, action);\n\n    case actionTypes.FETCH_FAVES_START:\n      return fetchFavesStart(state, action);\n\n    case actionTypes.FETCH_FAVES_SUCCESS:\n      return fetchFavesSuccess(state, action);\n\n    case actionTypes.FETCH_FAVES_FAIL:\n      return fetchFavesFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\Afa\\Desktop\\npm test\\node_modules\\gipsy\\src\\store\\reducers\\favorites.js"],"names":["actionTypes","updateObject","initialState","favorites","loading","favorited","faveStart","state","action","faveSuccess","newFave","faveData","id","faveId","concat","faveFail","fetchFavesStart","fetchFavesSuccess","fetchFavesFail","reducer","type","FAVE_START","FAVE_SUCCESS","FAVE_FAIL","FETCH_FAVES_START","FETCH_FAVES_SUCCESS","FETCH_FAVES_FAIL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAEC,KAAF,EAASC,MAAT,EAAqB;AACnC,SAAOP,YAAY,CAAEM,KAAF,EAAS;AAAEH,IAAAA,OAAO,EAAE,KAAX;AAAkBC,IAAAA,SAAS,EAAE;AAA7B,GAAT,CAAnB;AACH,CAFD;;AAIA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAEF,KAAF,EAASC,MAAT,EAAqB;AACrC,MAAME,OAAO,GAAGT,YAAY,CAAEO,MAAM,CAACG,QAAT,EAAmB;AAAEC,IAAAA,EAAE,EAAEJ,MAAM,CAACK;AAAb,GAAnB,CAA5B;AACA,SAAOZ,YAAY,CAAEM,KAAF,EAAS;AACxBH,IAAAA,OAAO,EAAE,KADe;AAExBD,IAAAA,SAAS,EAAEI,KAAK,CAACJ,SAAN,CAAgBW,MAAhB,CAAwBJ,OAAxB;AAFa,GAAT,CAAnB;AAIH,CAND;;AAQA,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAAER,KAAF,EAASC,MAAT,EAAqB;AAClC,SAAOP,YAAY,CAAEM,KAAF,EAAS;AAAEH,IAAAA,OAAO,EAAE;AAAX,GAAT,CAAnB;AACH,CAFD;;AAIA,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAET,KAAF,EAASC,MAAT,EAAqB;AACzC,SAAOP,YAAY,CAAEM,KAAF,EAAS;AAAEH,IAAAA,OAAO,EAAE;AAAX,GAAT,CAAnB;AACH,CAFD;;AAIA,IAAMa,iBAAiB,GAAG,SAApBA,iBAAoB,CAAEV,KAAF,EAASC,MAAT,EAAqB;AAC3C,SAAOP,YAAY,CAAEM,KAAF,EAAS;AACxBJ,IAAAA,SAAS,EAAEK,MAAM,CAACL,SADM;AAExBC,IAAAA,OAAO,EAAE;AAFe,GAAT,CAAnB;AAIH,CALD;;AAOA,IAAMc,cAAc,GAAG,SAAjBA,cAAiB,CAAEX,KAAF,EAASC,MAAT,EAAqB;AACxC,SAAOP,YAAY,CAAEM,KAAF,EAAS;AAAEH,IAAAA,OAAO,EAAE;AAAX,GAAT,CAAnB;AACH,CAFD;;AAGA,IAAMe,OAAO,GAAG,SAAVA,OAAU,GAAoC;AAAA,MAAlCZ,KAAkC,uEAA1BL,YAA0B;AAAA,MAAZM,MAAY;;AAChD,UAASA,MAAM,CAACY,IAAhB;AACI,SAAKpB,WAAW,CAACqB,UAAjB;AAA6B,aAAOf,SAAS,CAAEC,KAAF,EAASC,MAAT,CAAhB;;AAC7B,SAAKR,WAAW,CAACsB,YAAjB;AAA+B,aAAOb,WAAW,CAAEF,KAAF,EAASC,MAAT,CAAlB;;AAC/B,SAAKR,WAAW,CAACuB,SAAjB;AAA4B,aAAOR,QAAQ,CAAER,KAAF,EAASC,MAAT,CAAf;;AAC5B,SAAKR,WAAW,CAACwB,iBAAjB;AAAoC,aAAOR,eAAe,CAAET,KAAF,EAASC,MAAT,CAAtB;;AACpC,SAAKR,WAAW,CAACyB,mBAAjB;AAAsC,aAAOR,iBAAiB,CAAEV,KAAF,EAASC,MAAT,CAAxB;;AACtC,SAAKR,WAAW,CAAC0B,gBAAjB;AAAmC,aAAOR,cAAc,CAAEX,KAAF,EAASC,MAAT,CAArB;;AACnC;AAAS,aAAOD,KAAP;AAPb;AASH,CAVD;;AAWA,eAAeY,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    favorites: [],\r\n    loading: false,\r\n    favorited: false\r\n};\r\n\r\nconst faveStart = ( state, action ) => {\r\n    return updateObject( state, { loading: false, favorited: true } );\r\n};\r\n\r\nconst faveSuccess = ( state, action ) => {\r\n    const newFave = updateObject( action.faveData, { id: action.faveId } );\r\n    return updateObject( state, {\r\n        loading: false,\r\n        favorites: state.favorites.concat( newFave ),\r\n    });\r\n};\r\n\r\nconst faveFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\nconst fetchFavesStart = ( state, action ) => {\r\n    return updateObject( state, { loading: true } );\r\n};\r\n\r\nconst fetchFavesSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        favorites: action.favorites,\r\n        loading: false\r\n    } );\r\n};\r\n\r\nconst fetchFavesFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } )\r\n}\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.FAVE_START: return faveStart( state, action );\r\n        case actionTypes.FAVE_SUCCESS: return faveSuccess( state, action )\r\n        case actionTypes.FAVE_FAIL: return faveFail( state, action );\r\n        case actionTypes.FETCH_FAVES_START: return fetchFavesStart( state, action );\r\n        case actionTypes.FETCH_FAVES_SUCCESS: return fetchFavesSuccess( state, action );\r\n        case actionTypes.FETCH_FAVES_FAIL: return fetchFavesFail( state, action );\r\n        default: return state;\r\n    }\r\n};\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}